def project_dir = "C:/Users/frogm/Desktop/Modpack Repos/magneticraft"

buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "gt"
            url = "https://gregtech.overminddl1.com/"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'
apply plugin: 'idea'

version = "0.6.0-final-FROGPATCH-A"
group= "com.cout970.magneticraft" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "magneticraft"

sourceCompatibility = "1.8"
targetCompatibility = "1.8"



minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "run"

    //make version only have to be changed by one place, and that is here
    replace "@VERSION@", project.version
    replaceIn "Magneticraft.java"
}

repositories {
    maven { // The repo from which to get waila
        name "Mobius Repo"
        url "http://mobiusstrip.eu/maven"
    }
    maven { // the repo from which to get NEI and stuff
        name 'CB Repo'
        url "http://chickenbones.net/maven/"
    }
  
}

dependencies {
    compile "codechicken:CodeChickenLib:1.7.10-1.1.3.140:dev"
    compile "codechicken:CodeChickenCore:1.7.10-1.0.7.47:dev"
    compile "codechicken:NotEnoughItems:1.7.10-1.0.5.118:dev"
    compile "mcp.mobius.waila:Waila:1.5.10_1.7.10"
    compile files("libs/Guide-API-1.7.10-1.0.1-29-deobf.jar")
}

sourceSets {
    main {
        java {
            srcDir project_dir + archivesBaseName + "/src/main/java"
        }
        resources {
            srcDir project_dir + archivesBaseName + "/src/main/resources"
        }
        output.resourcesDir = output.classesDir
    }
}

tasks.withType(Jar) {
    destinationDir = file(project_dir + "/Exported/")
}

processResources
        {
            // this will ensure that this task is redone when the versions change.
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version

            // replace stuff in mcmod.info, nothing else
            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'

                // replace version and mcversion
                expand 'version':project.version, 'mcversion':project.minecraft.version
            }

            // copy everything else, thats not the mcmod.info
            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
                exclude 'mgc_at.cfg'
            }
        }

task sourceJar(type: Jar) {
    from sourceSets.main.java
    classifier = 'src'
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
}

build.dependsOn deobfJar
build.dependsOn sourceJar
